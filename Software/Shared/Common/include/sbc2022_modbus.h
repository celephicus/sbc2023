// Our MODBUS presence is limited to two blocks of holding registers.
// Address zero mirror the internal REGS and are read only.
// Other addresses are for the relay or sensors. For simplicity they all use the same address.
//
enum {
	SBC2022_MODBUS_REGISTER_RELAY = 100,
	SBC2022_MODBUS_REGISTER_SENSOR_TILT = 100,
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS = 101,
};

// Status codes from Sensor module.
enum {
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_NOT_PRESENT = 0,		// Sensor no response (code generated by master, never sent by slave).
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_NOT_WORKING = 1,		// Sensor not working (code sent from slave).
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_BAD_RESPONSE = 2,		// Sensor response received, but there was an error.
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_IDLE = 100,			// Sensor not moving
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_MOTION_POS = 101,		// Sensor moving up.
	SBC2022_MODBUS_REGISTER_SENSOR_STATUS_MOTION_NEG = 102,		// Sensor moving down.
};

// Status codes from Relay module. All generated by master, Relay does not have a status.
enum {
	SBC2022_MODBUS_REGISTER_RELAY_STATUS_NOT_PRESENT = 0,		// Relay no response.
	SBC2022_MODBUS_REGISTER_RELAY_STATUS_BAD_RESPONSE = 2,		// Relay response received, but there was an error.
	SBC2022_MODBUS_REGISTER_RELAY_STATUS_OK = 100,				// Relay OK.

// Slave IDs (addresses).
enum {
	SBC2022_MODBUS_SLAVE_ID_RELAY = 16,
	SBC2022_MODBUS_SLAVE_ID_SENSOR_0 = 1,		// First tilt sensor, others follow on from here.
	SBC2022_MODBUS_SLAVE_COUNT_SENSOR = 4,
};
const uint16_t SBC2022_MODBUS_TILT_FAULT = 32767;	// Tilt sensor value returned on fault.
