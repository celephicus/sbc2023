/* This file is autogenerated by grm -- do not edit. */

#ifndef UNITY_INCLUDE_CONFIG_H
#error "Must define UNITY_INCLUDE_CONFIG_H."
#endif

/*** Standard includes. ***/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>

#include "unity.h"


/*** Stuff copied from test files (should be #include's, declarations & macros only) ***/
#include "project_config.test.h"
#include "utils.h"
#include "event.h"
#include "utils.h"

// Test our FIFO type.
//

// Need these available for test cases.
#define QUEUE_DEPTH 4
DECLARE_QUEUE_TYPE(Q, uint8_t, QUEUE_DEPTH)
typedef bool (*QueuePutFunc)(QueueQ*, uint8_t*);
#define TEST_UTILS_BUF_SIZE 4

/*** External test functions scraped from test files. ***/
void testMakeEvent(t_event ev, uint8_t id, uint8_t p8=0, uint16_t p16=0);
void testEventNameStr();
void testEventDescStr();
void testEventSetup();
void testEventQueueEmpty();
void testEventQueuePublishEv();
void testEventQueuePublish();
void testEventQueue2();
void testEventQueueFull();
void testEventQueueNoPublishNil();
void testEventQueueOverflow();
void testEventQueuePublishFront_1();
void testEventQueuePublishFront_N();
void testEventTraceMaskInit();
void testUtilsQueueSetup();
void testUtilsQueueEmpty();
void testUtilsQueuePut(QueuePutFunc put, uint8_t preload, uint8_t n, int8_t start, int8_t inc);
void testUtilsQueuePutOvf(QueuePutFunc put, uint8_t preload, int8_t start, int8_t inc);
void testUtilsQueuePutLifo(uint8_t preload, uint8_t n);
void testUtilsQueuePutOverwrite(uint8_t preload, uint8_t n);
void testCleared();
void testUtilsBufferSetup();
void testBufferInit();
void testBufferAddChar(int n);
void testBufferAddCharOverflow();
void testBufferAddU16(int n);
void testBufferAddU16Overflow();
void testBufferAddMem();
void testUtilsBufferReset();
void testUtilsStrtoui(const char *fmtstr, unsigned long nn, unsigned base, bool rc_exp, unsigned n_exp, char end);

/*** Fixture & dump functions from test files. ***/
void testEventSetup(void);
void testUtilsQueueSetup(void);
void testUtilsBufferSetup(void);

/* Declare test stubs. */
static void testMakeEvent_stub_0(void) { testMakeEvent(event_mk(0xef), 0xef); }
static void testMakeEvent_stub_1(void) { testMakeEvent(event_mk(0xef, 0xcd), 0xef, 0xcd); }
static void testMakeEvent_stub_2(void) { testMakeEvent(event_mk(0xef, 0xcd, 0xf00f), 0xef, 0xcd, 0xf00f); }
static void testUtilsQueuePut_stub_3(void) { testUtilsQueuePut(queueQPut, 0, 0, 10, 1); }
static void testUtilsQueuePut_stub_4(void) { testUtilsQueuePut(queueQPut, 0, 1, 10, 1); }
static void testUtilsQueuePut_stub_5(void) { testUtilsQueuePut(queueQPut, 0, 2, 10, 1); }
static void testUtilsQueuePut_stub_6(void) { testUtilsQueuePut(queueQPut, 0, 3, 10, 1); }
static void testUtilsQueuePut_stub_7(void) { testUtilsQueuePut(queueQPut, 0, 4, 10, 1); }
static void testUtilsQueuePut_stub_8(void) { testUtilsQueuePut(queueQPut, 1, 0, 10, 1); }
static void testUtilsQueuePut_stub_9(void) { testUtilsQueuePut(queueQPut, 1, 1, 10, 1); }
static void testUtilsQueuePut_stub_10(void) { testUtilsQueuePut(queueQPut, 1, 2, 10, 1); }
static void testUtilsQueuePut_stub_11(void) { testUtilsQueuePut(queueQPut, 1, 3, 10, 1); }
static void testUtilsQueuePut_stub_12(void) { testUtilsQueuePut(queueQPut, 1, 4, 10, 1); }
static void testUtilsQueuePut_stub_13(void) { testUtilsQueuePut(queueQPut, 2, 0, 10, 1); }
static void testUtilsQueuePut_stub_14(void) { testUtilsQueuePut(queueQPut, 2, 1, 10, 1); }
static void testUtilsQueuePut_stub_15(void) { testUtilsQueuePut(queueQPut, 2, 2, 10, 1); }
static void testUtilsQueuePut_stub_16(void) { testUtilsQueuePut(queueQPut, 2, 3, 10, 1); }
static void testUtilsQueuePut_stub_17(void) { testUtilsQueuePut(queueQPut, 2, 4, 10, 1); }
static void testUtilsQueuePut_stub_18(void) { testUtilsQueuePut(queueQPut, 3, 0, 10, 1); }
static void testUtilsQueuePut_stub_19(void) { testUtilsQueuePut(queueQPut, 3, 1, 10, 1); }
static void testUtilsQueuePut_stub_20(void) { testUtilsQueuePut(queueQPut, 3, 2, 10, 1); }
static void testUtilsQueuePut_stub_21(void) { testUtilsQueuePut(queueQPut, 3, 3, 10, 1); }
static void testUtilsQueuePut_stub_22(void) { testUtilsQueuePut(queueQPut, 3, 4, 10, 1); }
static void testUtilsQueuePut_stub_23(void) { testUtilsQueuePut(queueQPut, 4, 0, 10, 1); }
static void testUtilsQueuePut_stub_24(void) { testUtilsQueuePut(queueQPut, 4, 1, 10, 1); }
static void testUtilsQueuePut_stub_25(void) { testUtilsQueuePut(queueQPut, 4, 2, 10, 1); }
static void testUtilsQueuePut_stub_26(void) { testUtilsQueuePut(queueQPut, 4, 3, 10, 1); }
static void testUtilsQueuePut_stub_27(void) { testUtilsQueuePut(queueQPut, 4, 4, 10, 1); }
static void testUtilsQueuePut_stub_28(void) { testUtilsQueuePut(queueQPut, 5, 0, 10, 1); }
static void testUtilsQueuePut_stub_29(void) { testUtilsQueuePut(queueQPut, 5, 1, 10, 1); }
static void testUtilsQueuePut_stub_30(void) { testUtilsQueuePut(queueQPut, 5, 2, 10, 1); }
static void testUtilsQueuePut_stub_31(void) { testUtilsQueuePut(queueQPut, 5, 3, 10, 1); }
static void testUtilsQueuePut_stub_32(void) { testUtilsQueuePut(queueQPut, 5, 4, 10, 1); }
static void testUtilsQueuePut_stub_33(void) { testUtilsQueuePut(queueQPut, 254, 0, 10, 1); }
static void testUtilsQueuePut_stub_34(void) { testUtilsQueuePut(queueQPut, 254, 1, 10, 1); }
static void testUtilsQueuePut_stub_35(void) { testUtilsQueuePut(queueQPut, 254, 2, 10, 1); }
static void testUtilsQueuePut_stub_36(void) { testUtilsQueuePut(queueQPut, 254, 3, 10, 1); }
static void testUtilsQueuePut_stub_37(void) { testUtilsQueuePut(queueQPut, 254, 4, 10, 1); }
static void testUtilsQueuePut_stub_38(void) { testUtilsQueuePut(queueQPut, 255, 0, 10, 1); }
static void testUtilsQueuePut_stub_39(void) { testUtilsQueuePut(queueQPut, 255, 1, 10, 1); }
static void testUtilsQueuePut_stub_40(void) { testUtilsQueuePut(queueQPut, 255, 2, 10, 1); }
static void testUtilsQueuePut_stub_41(void) { testUtilsQueuePut(queueQPut, 255, 3, 10, 1); }
static void testUtilsQueuePut_stub_42(void) { testUtilsQueuePut(queueQPut, 255, 4, 10, 1); }
static void testUtilsQueuePutOvf_stub_43(void) { testUtilsQueuePutOvf(queueQPut, 0, 10, 1); }
static void testUtilsQueuePutOvf_stub_44(void) { testUtilsQueuePutOvf(queueQPut, 1, 10, 1); }
static void testUtilsQueuePutOvf_stub_45(void) { testUtilsQueuePutOvf(queueQPut, 2, 10, 1); }
static void testUtilsQueuePutOvf_stub_46(void) { testUtilsQueuePutOvf(queueQPut, 3, 10, 1); }
static void testUtilsQueuePutOvf_stub_47(void) { testUtilsQueuePutOvf(queueQPut, 4, 10, 1); }
static void testUtilsQueuePutOvf_stub_48(void) { testUtilsQueuePutOvf(queueQPut, 5, 10, 1); }
static void testUtilsQueuePutOvf_stub_49(void) { testUtilsQueuePutOvf(queueQPut, 254, 10, 1); }
static void testUtilsQueuePutOvf_stub_50(void) { testUtilsQueuePutOvf(queueQPut, 255, 10, 1); }
static void testUtilsQueuePut_stub_51(void) { testUtilsQueuePut(queueQPush, 0, 0, 9, -1); }
static void testUtilsQueuePut_stub_52(void) { testUtilsQueuePut(queueQPush, 0, 1, 10, -1); }
static void testUtilsQueuePut_stub_53(void) { testUtilsQueuePut(queueQPush, 0, 2, 11, -1); }
static void testUtilsQueuePut_stub_54(void) { testUtilsQueuePut(queueQPush, 0, 3, 12, -1); }
static void testUtilsQueuePut_stub_55(void) { testUtilsQueuePut(queueQPush, 0, 4, 13, -1); }
static void testUtilsQueuePut_stub_56(void) { testUtilsQueuePut(queueQPush, 1, 0, 9, -1); }
static void testUtilsQueuePut_stub_57(void) { testUtilsQueuePut(queueQPush, 1, 1, 10, -1); }
static void testUtilsQueuePut_stub_58(void) { testUtilsQueuePut(queueQPush, 1, 2, 11, -1); }
static void testUtilsQueuePut_stub_59(void) { testUtilsQueuePut(queueQPush, 1, 3, 12, -1); }
static void testUtilsQueuePut_stub_60(void) { testUtilsQueuePut(queueQPush, 1, 4, 13, -1); }
static void testUtilsQueuePut_stub_61(void) { testUtilsQueuePut(queueQPush, 2, 0, 9, -1); }
static void testUtilsQueuePut_stub_62(void) { testUtilsQueuePut(queueQPush, 2, 1, 10, -1); }
static void testUtilsQueuePut_stub_63(void) { testUtilsQueuePut(queueQPush, 2, 2, 11, -1); }
static void testUtilsQueuePut_stub_64(void) { testUtilsQueuePut(queueQPush, 2, 3, 12, -1); }
static void testUtilsQueuePut_stub_65(void) { testUtilsQueuePut(queueQPush, 2, 4, 13, -1); }
static void testUtilsQueuePut_stub_66(void) { testUtilsQueuePut(queueQPush, 3, 0, 9, -1); }
static void testUtilsQueuePut_stub_67(void) { testUtilsQueuePut(queueQPush, 3, 1, 10, -1); }
static void testUtilsQueuePut_stub_68(void) { testUtilsQueuePut(queueQPush, 3, 2, 11, -1); }
static void testUtilsQueuePut_stub_69(void) { testUtilsQueuePut(queueQPush, 3, 3, 12, -1); }
static void testUtilsQueuePut_stub_70(void) { testUtilsQueuePut(queueQPush, 3, 4, 13, -1); }
static void testUtilsQueuePut_stub_71(void) { testUtilsQueuePut(queueQPush, 4, 0, 9, -1); }
static void testUtilsQueuePut_stub_72(void) { testUtilsQueuePut(queueQPush, 4, 1, 10, -1); }
static void testUtilsQueuePut_stub_73(void) { testUtilsQueuePut(queueQPush, 4, 2, 11, -1); }
static void testUtilsQueuePut_stub_74(void) { testUtilsQueuePut(queueQPush, 4, 3, 12, -1); }
static void testUtilsQueuePut_stub_75(void) { testUtilsQueuePut(queueQPush, 4, 4, 13, -1); }
static void testUtilsQueuePut_stub_76(void) { testUtilsQueuePut(queueQPush, 5, 0, 9, -1); }
static void testUtilsQueuePut_stub_77(void) { testUtilsQueuePut(queueQPush, 5, 1, 10, -1); }
static void testUtilsQueuePut_stub_78(void) { testUtilsQueuePut(queueQPush, 5, 2, 11, -1); }
static void testUtilsQueuePut_stub_79(void) { testUtilsQueuePut(queueQPush, 5, 3, 12, -1); }
static void testUtilsQueuePut_stub_80(void) { testUtilsQueuePut(queueQPush, 5, 4, 13, -1); }
static void testUtilsQueuePut_stub_81(void) { testUtilsQueuePut(queueQPush, 254, 0, 9, -1); }
static void testUtilsQueuePut_stub_82(void) { testUtilsQueuePut(queueQPush, 254, 1, 10, -1); }
static void testUtilsQueuePut_stub_83(void) { testUtilsQueuePut(queueQPush, 254, 2, 11, -1); }
static void testUtilsQueuePut_stub_84(void) { testUtilsQueuePut(queueQPush, 254, 3, 12, -1); }
static void testUtilsQueuePut_stub_85(void) { testUtilsQueuePut(queueQPush, 254, 4, 13, -1); }
static void testUtilsQueuePut_stub_86(void) { testUtilsQueuePut(queueQPush, 255, 0, 9, -1); }
static void testUtilsQueuePut_stub_87(void) { testUtilsQueuePut(queueQPush, 255, 1, 10, -1); }
static void testUtilsQueuePut_stub_88(void) { testUtilsQueuePut(queueQPush, 255, 2, 11, -1); }
static void testUtilsQueuePut_stub_89(void) { testUtilsQueuePut(queueQPush, 255, 3, 12, -1); }
static void testUtilsQueuePut_stub_90(void) { testUtilsQueuePut(queueQPush, 255, 4, 13, -1); }
static void testUtilsQueuePutOvf_stub_91(void) { testUtilsQueuePutOvf(queueQPush, 0, 13, -1); }
static void testUtilsQueuePutOvf_stub_92(void) { testUtilsQueuePutOvf(queueQPush, 1, 13, -1); }
static void testUtilsQueuePutOvf_stub_93(void) { testUtilsQueuePutOvf(queueQPush, 2, 13, -1); }
static void testUtilsQueuePutOvf_stub_94(void) { testUtilsQueuePutOvf(queueQPush, 3, 13, -1); }
static void testUtilsQueuePutOvf_stub_95(void) { testUtilsQueuePutOvf(queueQPush, 4, 13, -1); }
static void testUtilsQueuePutOvf_stub_96(void) { testUtilsQueuePutOvf(queueQPush, 5, 13, -1); }
static void testUtilsQueuePutOvf_stub_97(void) { testUtilsQueuePutOvf(queueQPush, 254, 13, -1); }
static void testUtilsQueuePutOvf_stub_98(void) { testUtilsQueuePutOvf(queueQPush, 255, 13, -1); }
static void testUtilsQueuePutLifo_stub_99(void) { testUtilsQueuePutLifo(0, 0); }
static void testUtilsQueuePutLifo_stub_100(void) { testUtilsQueuePutLifo(0, 1); }
static void testUtilsQueuePutLifo_stub_101(void) { testUtilsQueuePutLifo(0, 2); }
static void testUtilsQueuePutLifo_stub_102(void) { testUtilsQueuePutLifo(0, 3); }
static void testUtilsQueuePutLifo_stub_103(void) { testUtilsQueuePutLifo(1, 0); }
static void testUtilsQueuePutLifo_stub_104(void) { testUtilsQueuePutLifo(1, 1); }
static void testUtilsQueuePutLifo_stub_105(void) { testUtilsQueuePutLifo(1, 2); }
static void testUtilsQueuePutLifo_stub_106(void) { testUtilsQueuePutLifo(1, 3); }
static void testUtilsQueuePutLifo_stub_107(void) { testUtilsQueuePutLifo(2, 0); }
static void testUtilsQueuePutLifo_stub_108(void) { testUtilsQueuePutLifo(2, 1); }
static void testUtilsQueuePutLifo_stub_109(void) { testUtilsQueuePutLifo(2, 2); }
static void testUtilsQueuePutLifo_stub_110(void) { testUtilsQueuePutLifo(2, 3); }
static void testUtilsQueuePutLifo_stub_111(void) { testUtilsQueuePutLifo(3, 0); }
static void testUtilsQueuePutLifo_stub_112(void) { testUtilsQueuePutLifo(3, 1); }
static void testUtilsQueuePutLifo_stub_113(void) { testUtilsQueuePutLifo(3, 2); }
static void testUtilsQueuePutLifo_stub_114(void) { testUtilsQueuePutLifo(3, 3); }
static void testUtilsQueuePutLifo_stub_115(void) { testUtilsQueuePutLifo(4, 0); }
static void testUtilsQueuePutLifo_stub_116(void) { testUtilsQueuePutLifo(4, 1); }
static void testUtilsQueuePutLifo_stub_117(void) { testUtilsQueuePutLifo(4, 2); }
static void testUtilsQueuePutLifo_stub_118(void) { testUtilsQueuePutLifo(4, 3); }
static void testUtilsQueuePutLifo_stub_119(void) { testUtilsQueuePutLifo(5, 0); }
static void testUtilsQueuePutLifo_stub_120(void) { testUtilsQueuePutLifo(5, 1); }
static void testUtilsQueuePutLifo_stub_121(void) { testUtilsQueuePutLifo(5, 2); }
static void testUtilsQueuePutLifo_stub_122(void) { testUtilsQueuePutLifo(5, 3); }
static void testUtilsQueuePutLifo_stub_123(void) { testUtilsQueuePutLifo(254, 0); }
static void testUtilsQueuePutLifo_stub_124(void) { testUtilsQueuePutLifo(254, 1); }
static void testUtilsQueuePutLifo_stub_125(void) { testUtilsQueuePutLifo(254, 2); }
static void testUtilsQueuePutLifo_stub_126(void) { testUtilsQueuePutLifo(254, 3); }
static void testUtilsQueuePutLifo_stub_127(void) { testUtilsQueuePutLifo(255, 0); }
static void testUtilsQueuePutLifo_stub_128(void) { testUtilsQueuePutLifo(255, 1); }
static void testUtilsQueuePutLifo_stub_129(void) { testUtilsQueuePutLifo(255, 2); }
static void testUtilsQueuePutLifo_stub_130(void) { testUtilsQueuePutLifo(255, 3); }
static void testUtilsQueuePutOverwrite_stub_131(void) { testUtilsQueuePutOverwrite(0, 0); }
static void testUtilsQueuePutOverwrite_stub_132(void) { testUtilsQueuePutOverwrite(0, 1); }
static void testUtilsQueuePutOverwrite_stub_133(void) { testUtilsQueuePutOverwrite(0, 2); }
static void testUtilsQueuePutOverwrite_stub_134(void) { testUtilsQueuePutOverwrite(0, 3); }
static void testUtilsQueuePutOverwrite_stub_135(void) { testUtilsQueuePutOverwrite(0, 4); }
static void testUtilsQueuePutOverwrite_stub_136(void) { testUtilsQueuePutOverwrite(0, 5); }
static void testUtilsQueuePutOverwrite_stub_137(void) { testUtilsQueuePutOverwrite(0, 6); }
static void testUtilsQueuePutOverwrite_stub_138(void) { testUtilsQueuePutOverwrite(1, 0); }
static void testUtilsQueuePutOverwrite_stub_139(void) { testUtilsQueuePutOverwrite(1, 1); }
static void testUtilsQueuePutOverwrite_stub_140(void) { testUtilsQueuePutOverwrite(1, 2); }
static void testUtilsQueuePutOverwrite_stub_141(void) { testUtilsQueuePutOverwrite(1, 3); }
static void testUtilsQueuePutOverwrite_stub_142(void) { testUtilsQueuePutOverwrite(1, 4); }
static void testUtilsQueuePutOverwrite_stub_143(void) { testUtilsQueuePutOverwrite(1, 5); }
static void testUtilsQueuePutOverwrite_stub_144(void) { testUtilsQueuePutOverwrite(1, 6); }
static void testUtilsQueuePutOverwrite_stub_145(void) { testUtilsQueuePutOverwrite(2, 0); }
static void testUtilsQueuePutOverwrite_stub_146(void) { testUtilsQueuePutOverwrite(2, 1); }
static void testUtilsQueuePutOverwrite_stub_147(void) { testUtilsQueuePutOverwrite(2, 2); }
static void testUtilsQueuePutOverwrite_stub_148(void) { testUtilsQueuePutOverwrite(2, 3); }
static void testUtilsQueuePutOverwrite_stub_149(void) { testUtilsQueuePutOverwrite(2, 4); }
static void testUtilsQueuePutOverwrite_stub_150(void) { testUtilsQueuePutOverwrite(2, 5); }
static void testUtilsQueuePutOverwrite_stub_151(void) { testUtilsQueuePutOverwrite(2, 6); }
static void testUtilsQueuePutOverwrite_stub_152(void) { testUtilsQueuePutOverwrite(3, 0); }
static void testUtilsQueuePutOverwrite_stub_153(void) { testUtilsQueuePutOverwrite(3, 1); }
static void testUtilsQueuePutOverwrite_stub_154(void) { testUtilsQueuePutOverwrite(3, 2); }
static void testUtilsQueuePutOverwrite_stub_155(void) { testUtilsQueuePutOverwrite(3, 3); }
static void testUtilsQueuePutOverwrite_stub_156(void) { testUtilsQueuePutOverwrite(3, 4); }
static void testUtilsQueuePutOverwrite_stub_157(void) { testUtilsQueuePutOverwrite(3, 5); }
static void testUtilsQueuePutOverwrite_stub_158(void) { testUtilsQueuePutOverwrite(3, 6); }
static void testUtilsQueuePutOverwrite_stub_159(void) { testUtilsQueuePutOverwrite(4, 0); }
static void testUtilsQueuePutOverwrite_stub_160(void) { testUtilsQueuePutOverwrite(4, 1); }
static void testUtilsQueuePutOverwrite_stub_161(void) { testUtilsQueuePutOverwrite(4, 2); }
static void testUtilsQueuePutOverwrite_stub_162(void) { testUtilsQueuePutOverwrite(4, 3); }
static void testUtilsQueuePutOverwrite_stub_163(void) { testUtilsQueuePutOverwrite(4, 4); }
static void testUtilsQueuePutOverwrite_stub_164(void) { testUtilsQueuePutOverwrite(4, 5); }
static void testUtilsQueuePutOverwrite_stub_165(void) { testUtilsQueuePutOverwrite(4, 6); }
static void testUtilsQueuePutOverwrite_stub_166(void) { testUtilsQueuePutOverwrite(5, 0); }
static void testUtilsQueuePutOverwrite_stub_167(void) { testUtilsQueuePutOverwrite(5, 1); }
static void testUtilsQueuePutOverwrite_stub_168(void) { testUtilsQueuePutOverwrite(5, 2); }
static void testUtilsQueuePutOverwrite_stub_169(void) { testUtilsQueuePutOverwrite(5, 3); }
static void testUtilsQueuePutOverwrite_stub_170(void) { testUtilsQueuePutOverwrite(5, 4); }
static void testUtilsQueuePutOverwrite_stub_171(void) { testUtilsQueuePutOverwrite(5, 5); }
static void testUtilsQueuePutOverwrite_stub_172(void) { testUtilsQueuePutOverwrite(5, 6); }
static void testUtilsQueuePutOverwrite_stub_173(void) { testUtilsQueuePutOverwrite(254, 0); }
static void testUtilsQueuePutOverwrite_stub_174(void) { testUtilsQueuePutOverwrite(254, 1); }
static void testUtilsQueuePutOverwrite_stub_175(void) { testUtilsQueuePutOverwrite(254, 2); }
static void testUtilsQueuePutOverwrite_stub_176(void) { testUtilsQueuePutOverwrite(254, 3); }
static void testUtilsQueuePutOverwrite_stub_177(void) { testUtilsQueuePutOverwrite(254, 4); }
static void testUtilsQueuePutOverwrite_stub_178(void) { testUtilsQueuePutOverwrite(254, 5); }
static void testUtilsQueuePutOverwrite_stub_179(void) { testUtilsQueuePutOverwrite(254, 6); }
static void testUtilsQueuePutOverwrite_stub_180(void) { testUtilsQueuePutOverwrite(255, 0); }
static void testUtilsQueuePutOverwrite_stub_181(void) { testUtilsQueuePutOverwrite(255, 1); }
static void testUtilsQueuePutOverwrite_stub_182(void) { testUtilsQueuePutOverwrite(255, 2); }
static void testUtilsQueuePutOverwrite_stub_183(void) { testUtilsQueuePutOverwrite(255, 3); }
static void testUtilsQueuePutOverwrite_stub_184(void) { testUtilsQueuePutOverwrite(255, 4); }
static void testUtilsQueuePutOverwrite_stub_185(void) { testUtilsQueuePutOverwrite(255, 5); }
static void testUtilsQueuePutOverwrite_stub_186(void) { testUtilsQueuePutOverwrite(255, 6); }
static void testBufferAddChar_stub_187(void) { testBufferAddChar(1); }
static void testBufferAddChar_stub_188(void) { testBufferAddChar(TEST_UTILS_BUF_SIZE-1); }
static void testBufferAddChar_stub_189(void) { testBufferAddChar(TEST_UTILS_BUF_SIZE); }
static void testBufferAddU16_stub_190(void) { testBufferAddU16(1); }
static void testBufferAddU16_stub_191(void) { testBufferAddU16(TEST_UTILS_BUF_SIZE/2-1); }
static void testBufferAddU16_stub_192(void) { testBufferAddU16(TEST_UTILS_BUF_SIZE/2); }
static void testUtilsStrtoui_stub_193(void) { testUtilsStrtoui("", 0, 10, false, 0, '\0'); }
static void testUtilsStrtoui_stub_194(void) { testUtilsStrtoui("*", 0,  10, false, 0, '*'); }
static void testUtilsStrtoui_stub_195(void) { testUtilsStrtoui("9", 0,  10, true, 9, '\0'); }
static void testUtilsStrtoui_stub_196(void) { testUtilsStrtoui("1", 0,  2, true, 1, '\0'); }
static void testUtilsStrtoui_stub_197(void) { testUtilsStrtoui("f", 0,  16, true, 15, '\0'); }
static void testUtilsStrtoui_stub_198(void) { testUtilsStrtoui("F", 0,  16, true, 15, '\0'); }
static void testUtilsStrtoui_stub_199(void) { testUtilsStrtoui("z", 0,  36, true, 35, '\0'); }
static void testUtilsStrtoui_stub_200(void) { testUtilsStrtoui("Z", 0,  36, true, 35, '\0'); }
static void testUtilsStrtoui_stub_201(void) { testUtilsStrtoui("+9", 0,  10, true, 9, '\0'); }
static void testUtilsStrtoui_stub_202(void) { testUtilsStrtoui(" 9", 0,  10, true, 9, '\0'); }
static void testUtilsStrtoui_stub_203(void) { testUtilsStrtoui("09", 0,  10, true, 9, '\0'); }
static void testUtilsStrtoui_stub_204(void) { testUtilsStrtoui("%lu", UINT_MAX,  10, true, UINT_MAX, '\0'); }
static void testUtilsStrtoui_stub_205(void) { testUtilsStrtoui("%lx", UINT_MAX,  16, true, UINT_MAX, '\0'); }
static void testUtilsStrtoui_stub_206(void) { testUtilsStrtoui("%lu", (unsigned long)UINT_MAX+1,  10, false, 0, '\0'); }
static void testUtilsStrtoui_stub_207(void) { testUtilsStrtoui("%lx", (unsigned long)UINT_MAX+1,  16, false, 0, '\0'); }
static void testUtilsStrtoui_stub_208(void) { testUtilsStrtoui("9a", 0,  10, true, 9, 'a'); }
static void testUtilsStrtoui_stub_209(void) { testUtilsStrtoui("a", 0,  10, false, 0, 'a'); }

/*** Extra Unity support. ***/

/* Functions for setup, diagnostics dump on a test failure & teardown. */
typedef void (*fixture_func_t)(void);
static fixture_func_t setUp_func, dump_func, tearDown_func;
void registerFixture(fixture_func_t setup, fixture_func_t dumper, fixture_func_t teardown) {
	setUp_func = setup;
	dump_func = dumper;
	tearDown_func = teardown;
}

void setUp() { if (setUp_func) setUp_func(); }
void dumpTestContext() { if (dump_func) dump_func(); }
void tearDown() { if (tearDown_func) tearDown_func(); }

static void do_run_test(UnityTestFunction func, const char* name, int line_num) {
#ifdef UNITY_USE_COMMAND_LINE_ARGS
    if (!UnityTestMatches())
        return;
#endif
	UnityDefaultTestRun(func, name, line_num);
}

int main(int argc, char** argv) {
#if 0
	int rc_parse = UnityParseOptions(argc,argv);
	if (rc_parse != 0)
		return rc_parse;
#else
	(void)argc;
	(void)argv;
#endif
  UnityBegin("");
  
  UnitySetTestFile("test_event.cpp");
  do_run_test(testMakeEvent_stub_0, "testMakeEvent(event_mk(0xef), 0xef)", 18);
  do_run_test(testMakeEvent_stub_1, "testMakeEvent(event_mk(0xef, 0xcd), 0xef, 0xcd)", 19);
  do_run_test(testMakeEvent_stub_2, "testMakeEvent(event_mk(0xef, 0xcd, 0xf00f), 0xef, 0xcd, 0xf00f)", 20);
  do_run_test(testEventNameStr, "testEventNameStr", 22);
  do_run_test(testEventDescStr, "testEventDescStr", 26);
  do_run_test(testEventSetup, "testEventSetup", 31);
  registerFixture(testEventSetup, NULL, NULL);
  do_run_test(testEventQueueEmpty, "testEventQueueEmpty", 34);
  do_run_test(testEventQueuePublishEv, "testEventQueuePublishEv", 38);
  do_run_test(testEventQueuePublish, "testEventQueuePublish", 43);
  do_run_test(testEventQueue2, "testEventQueue2", 67);
  do_run_test(testEventQueueFull, "testEventQueueFull", 72);
  do_run_test(testEventQueueNoPublishNil, "testEventQueueNoPublishNil", 77);
  do_run_test(testEventQueueOverflow, "testEventQueueOverflow", 82);
  do_run_test(testEventQueuePublishFront_1, "testEventQueuePublishFront_1", 88);
  do_run_test(testEventQueuePublishFront_N, "testEventQueuePublishFront_N", 93);
  do_run_test(testEventTraceMaskInit, "testEventTraceMaskInit", 106);
  registerFixture(NULL, NULL, NULL);
  
  UnitySetTestFile("test_utils.cpp");
  do_run_test(testUtilsQueueSetup, "testUtilsQueueSetup", 22);
  registerFixture(testUtilsQueueSetup, NULL, NULL);
  do_run_test(testUtilsQueueEmpty, "testUtilsQueueEmpty", 34);
  do_run_test(testUtilsQueuePut_stub_3, "testUtilsQueuePut(queueQPut, 0, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_4, "testUtilsQueuePut(queueQPut, 0, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_5, "testUtilsQueuePut(queueQPut, 0, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_6, "testUtilsQueuePut(queueQPut, 0, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_7, "testUtilsQueuePut(queueQPut, 0, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_8, "testUtilsQueuePut(queueQPut, 1, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_9, "testUtilsQueuePut(queueQPut, 1, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_10, "testUtilsQueuePut(queueQPut, 1, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_11, "testUtilsQueuePut(queueQPut, 1, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_12, "testUtilsQueuePut(queueQPut, 1, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_13, "testUtilsQueuePut(queueQPut, 2, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_14, "testUtilsQueuePut(queueQPut, 2, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_15, "testUtilsQueuePut(queueQPut, 2, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_16, "testUtilsQueuePut(queueQPut, 2, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_17, "testUtilsQueuePut(queueQPut, 2, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_18, "testUtilsQueuePut(queueQPut, 3, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_19, "testUtilsQueuePut(queueQPut, 3, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_20, "testUtilsQueuePut(queueQPut, 3, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_21, "testUtilsQueuePut(queueQPut, 3, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_22, "testUtilsQueuePut(queueQPut, 3, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_23, "testUtilsQueuePut(queueQPut, 4, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_24, "testUtilsQueuePut(queueQPut, 4, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_25, "testUtilsQueuePut(queueQPut, 4, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_26, "testUtilsQueuePut(queueQPut, 4, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_27, "testUtilsQueuePut(queueQPut, 4, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_28, "testUtilsQueuePut(queueQPut, 5, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_29, "testUtilsQueuePut(queueQPut, 5, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_30, "testUtilsQueuePut(queueQPut, 5, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_31, "testUtilsQueuePut(queueQPut, 5, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_32, "testUtilsQueuePut(queueQPut, 5, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_33, "testUtilsQueuePut(queueQPut, 254, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_34, "testUtilsQueuePut(queueQPut, 254, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_35, "testUtilsQueuePut(queueQPut, 254, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_36, "testUtilsQueuePut(queueQPut, 254, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_37, "testUtilsQueuePut(queueQPut, 254, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_38, "testUtilsQueuePut(queueQPut, 255, 0, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_39, "testUtilsQueuePut(queueQPut, 255, 1, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_40, "testUtilsQueuePut(queueQPut, 255, 2, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_41, "testUtilsQueuePut(queueQPut, 255, 3, 10, 1)", 83);
  do_run_test(testUtilsQueuePut_stub_42, "testUtilsQueuePut(queueQPut, 255, 4, 10, 1)", 83);
  do_run_test(testUtilsQueuePutOvf_stub_43, "testUtilsQueuePutOvf(queueQPut, 0, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_44, "testUtilsQueuePutOvf(queueQPut, 1, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_45, "testUtilsQueuePutOvf(queueQPut, 2, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_46, "testUtilsQueuePutOvf(queueQPut, 3, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_47, "testUtilsQueuePutOvf(queueQPut, 4, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_48, "testUtilsQueuePutOvf(queueQPut, 5, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_49, "testUtilsQueuePutOvf(queueQPut, 254, 10, 1)", 90);
  do_run_test(testUtilsQueuePutOvf_stub_50, "testUtilsQueuePutOvf(queueQPut, 255, 10, 1)", 90);
  do_run_test(testUtilsQueuePut_stub_51, "testUtilsQueuePut(queueQPush, 0, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_52, "testUtilsQueuePut(queueQPush, 0, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_53, "testUtilsQueuePut(queueQPush, 0, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_54, "testUtilsQueuePut(queueQPush, 0, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_55, "testUtilsQueuePut(queueQPush, 0, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_56, "testUtilsQueuePut(queueQPush, 1, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_57, "testUtilsQueuePut(queueQPush, 1, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_58, "testUtilsQueuePut(queueQPush, 1, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_59, "testUtilsQueuePut(queueQPush, 1, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_60, "testUtilsQueuePut(queueQPush, 1, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_61, "testUtilsQueuePut(queueQPush, 2, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_62, "testUtilsQueuePut(queueQPush, 2, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_63, "testUtilsQueuePut(queueQPush, 2, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_64, "testUtilsQueuePut(queueQPush, 2, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_65, "testUtilsQueuePut(queueQPush, 2, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_66, "testUtilsQueuePut(queueQPush, 3, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_67, "testUtilsQueuePut(queueQPush, 3, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_68, "testUtilsQueuePut(queueQPush, 3, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_69, "testUtilsQueuePut(queueQPush, 3, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_70, "testUtilsQueuePut(queueQPush, 3, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_71, "testUtilsQueuePut(queueQPush, 4, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_72, "testUtilsQueuePut(queueQPush, 4, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_73, "testUtilsQueuePut(queueQPush, 4, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_74, "testUtilsQueuePut(queueQPush, 4, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_75, "testUtilsQueuePut(queueQPush, 4, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_76, "testUtilsQueuePut(queueQPush, 5, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_77, "testUtilsQueuePut(queueQPush, 5, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_78, "testUtilsQueuePut(queueQPush, 5, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_79, "testUtilsQueuePut(queueQPush, 5, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_80, "testUtilsQueuePut(queueQPush, 5, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_81, "testUtilsQueuePut(queueQPush, 254, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_82, "testUtilsQueuePut(queueQPush, 254, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_83, "testUtilsQueuePut(queueQPush, 254, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_84, "testUtilsQueuePut(queueQPush, 254, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_85, "testUtilsQueuePut(queueQPush, 254, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_86, "testUtilsQueuePut(queueQPush, 255, 0, 9, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_87, "testUtilsQueuePut(queueQPush, 255, 1, 10, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_88, "testUtilsQueuePut(queueQPush, 255, 2, 11, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_89, "testUtilsQueuePut(queueQPush, 255, 3, 12, -1)", 101);
  do_run_test(testUtilsQueuePut_stub_90, "testUtilsQueuePut(queueQPush, 255, 4, 13, -1)", 101);
  do_run_test(testUtilsQueuePutOvf_stub_91, "testUtilsQueuePutOvf(queueQPush, 0, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_92, "testUtilsQueuePutOvf(queueQPush, 1, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_93, "testUtilsQueuePutOvf(queueQPush, 2, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_94, "testUtilsQueuePutOvf(queueQPush, 3, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_95, "testUtilsQueuePutOvf(queueQPush, 4, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_96, "testUtilsQueuePutOvf(queueQPush, 5, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_97, "testUtilsQueuePutOvf(queueQPush, 254, 13, -1)", 108);
  do_run_test(testUtilsQueuePutOvf_stub_98, "testUtilsQueuePutOvf(queueQPush, 255, 13, -1)", 108);
  do_run_test(testUtilsQueuePutLifo_stub_99, "testUtilsQueuePutLifo(0, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_100, "testUtilsQueuePutLifo(0, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_101, "testUtilsQueuePutLifo(0, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_102, "testUtilsQueuePutLifo(0, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_103, "testUtilsQueuePutLifo(1, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_104, "testUtilsQueuePutLifo(1, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_105, "testUtilsQueuePutLifo(1, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_106, "testUtilsQueuePutLifo(1, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_107, "testUtilsQueuePutLifo(2, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_108, "testUtilsQueuePutLifo(2, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_109, "testUtilsQueuePutLifo(2, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_110, "testUtilsQueuePutLifo(2, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_111, "testUtilsQueuePutLifo(3, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_112, "testUtilsQueuePutLifo(3, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_113, "testUtilsQueuePutLifo(3, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_114, "testUtilsQueuePutLifo(3, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_115, "testUtilsQueuePutLifo(4, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_116, "testUtilsQueuePutLifo(4, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_117, "testUtilsQueuePutLifo(4, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_118, "testUtilsQueuePutLifo(4, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_119, "testUtilsQueuePutLifo(5, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_120, "testUtilsQueuePutLifo(5, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_121, "testUtilsQueuePutLifo(5, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_122, "testUtilsQueuePutLifo(5, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_123, "testUtilsQueuePutLifo(254, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_124, "testUtilsQueuePutLifo(254, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_125, "testUtilsQueuePutLifo(254, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_126, "testUtilsQueuePutLifo(254, 3)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_127, "testUtilsQueuePutLifo(255, 0)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_128, "testUtilsQueuePutLifo(255, 1)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_129, "testUtilsQueuePutLifo(255, 2)", 131);
  do_run_test(testUtilsQueuePutLifo_stub_130, "testUtilsQueuePutLifo(255, 3)", 131);
  do_run_test(testUtilsQueuePutOverwrite_stub_131, "testUtilsQueuePutOverwrite(0, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_132, "testUtilsQueuePutOverwrite(0, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_133, "testUtilsQueuePutOverwrite(0, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_134, "testUtilsQueuePutOverwrite(0, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_135, "testUtilsQueuePutOverwrite(0, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_136, "testUtilsQueuePutOverwrite(0, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_137, "testUtilsQueuePutOverwrite(0, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_138, "testUtilsQueuePutOverwrite(1, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_139, "testUtilsQueuePutOverwrite(1, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_140, "testUtilsQueuePutOverwrite(1, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_141, "testUtilsQueuePutOverwrite(1, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_142, "testUtilsQueuePutOverwrite(1, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_143, "testUtilsQueuePutOverwrite(1, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_144, "testUtilsQueuePutOverwrite(1, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_145, "testUtilsQueuePutOverwrite(2, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_146, "testUtilsQueuePutOverwrite(2, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_147, "testUtilsQueuePutOverwrite(2, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_148, "testUtilsQueuePutOverwrite(2, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_149, "testUtilsQueuePutOverwrite(2, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_150, "testUtilsQueuePutOverwrite(2, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_151, "testUtilsQueuePutOverwrite(2, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_152, "testUtilsQueuePutOverwrite(3, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_153, "testUtilsQueuePutOverwrite(3, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_154, "testUtilsQueuePutOverwrite(3, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_155, "testUtilsQueuePutOverwrite(3, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_156, "testUtilsQueuePutOverwrite(3, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_157, "testUtilsQueuePutOverwrite(3, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_158, "testUtilsQueuePutOverwrite(3, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_159, "testUtilsQueuePutOverwrite(4, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_160, "testUtilsQueuePutOverwrite(4, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_161, "testUtilsQueuePutOverwrite(4, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_162, "testUtilsQueuePutOverwrite(4, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_163, "testUtilsQueuePutOverwrite(4, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_164, "testUtilsQueuePutOverwrite(4, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_165, "testUtilsQueuePutOverwrite(4, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_166, "testUtilsQueuePutOverwrite(5, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_167, "testUtilsQueuePutOverwrite(5, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_168, "testUtilsQueuePutOverwrite(5, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_169, "testUtilsQueuePutOverwrite(5, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_170, "testUtilsQueuePutOverwrite(5, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_171, "testUtilsQueuePutOverwrite(5, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_172, "testUtilsQueuePutOverwrite(5, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_173, "testUtilsQueuePutOverwrite(254, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_174, "testUtilsQueuePutOverwrite(254, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_175, "testUtilsQueuePutOverwrite(254, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_176, "testUtilsQueuePutOverwrite(254, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_177, "testUtilsQueuePutOverwrite(254, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_178, "testUtilsQueuePutOverwrite(254, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_179, "testUtilsQueuePutOverwrite(254, 6)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_180, "testUtilsQueuePutOverwrite(255, 0)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_181, "testUtilsQueuePutOverwrite(255, 1)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_182, "testUtilsQueuePutOverwrite(255, 2)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_183, "testUtilsQueuePutOverwrite(255, 3)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_184, "testUtilsQueuePutOverwrite(255, 4)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_185, "testUtilsQueuePutOverwrite(255, 5)", 157);
  do_run_test(testUtilsQueuePutOverwrite_stub_186, "testUtilsQueuePutOverwrite(255, 6)", 157);
  do_run_test(testCleared, "testCleared", 160);
  do_run_test(testUtilsBufferSetup, "testUtilsBufferSetup", 176);
  registerFixture(testUtilsBufferSetup, NULL, NULL);
  do_run_test(testBufferInit, "testBufferInit", 188);
  do_run_test(testBufferAddChar_stub_187, "testBufferAddChar(1)", 203);
  do_run_test(testBufferAddChar_stub_188, "testBufferAddChar(TEST_UTILS_BUF_SIZE-1)", 204);
  do_run_test(testBufferAddChar_stub_189, "testBufferAddChar(TEST_UTILS_BUF_SIZE)", 205);
  do_run_test(testBufferAddCharOverflow, "testBufferAddCharOverflow", 207);
  do_run_test(testBufferAddU16_stub_190, "testBufferAddU16(1)", 232);
  do_run_test(testBufferAddU16_stub_191, "testBufferAddU16(TEST_UTILS_BUF_SIZE/2-1)", 233);
  do_run_test(testBufferAddU16_stub_192, "testBufferAddU16(TEST_UTILS_BUF_SIZE/2)", 234);
  do_run_test(testBufferAddU16Overflow, "testBufferAddU16Overflow", 236);
  do_run_test(testBufferAddMem, "testBufferAddMem", 249);
  do_run_test(testUtilsBufferReset, "testUtilsBufferReset", 266);
  do_run_test(testUtilsStrtoui_stub_193, "testUtilsStrtoui(\"\", 0, 10, false, 0, '\\0')", 294);
  do_run_test(testUtilsStrtoui_stub_194, "testUtilsStrtoui(\"*\", 0,  10, false, 0, '*')", 295);
  do_run_test(testUtilsStrtoui_stub_195, "testUtilsStrtoui(\"9\", 0,  10, true, 9, '\\0')", 297);
  do_run_test(testUtilsStrtoui_stub_196, "testUtilsStrtoui(\"1\", 0,  2, true, 1, '\\0')", 298);
  do_run_test(testUtilsStrtoui_stub_197, "testUtilsStrtoui(\"f\", 0,  16, true, 15, '\\0')", 299);
  do_run_test(testUtilsStrtoui_stub_198, "testUtilsStrtoui(\"F\", 0,  16, true, 15, '\\0')", 300);
  do_run_test(testUtilsStrtoui_stub_199, "testUtilsStrtoui(\"z\", 0,  36, true, 35, '\\0')", 301);
  do_run_test(testUtilsStrtoui_stub_200, "testUtilsStrtoui(\"Z\", 0,  36, true, 35, '\\0')", 302);
  do_run_test(testUtilsStrtoui_stub_201, "testUtilsStrtoui(\"+9\", 0,  10, true, 9, '\\0')", 304);
  do_run_test(testUtilsStrtoui_stub_202, "testUtilsStrtoui(\" 9\", 0,  10, true, 9, '\\0')", 305);
  do_run_test(testUtilsStrtoui_stub_203, "testUtilsStrtoui(\"09\", 0,  10, true, 9, '\\0')", 306);
  do_run_test(testUtilsStrtoui_stub_204, "testUtilsStrtoui(\"%lu\", UINT_MAX,  10, true, UINT_MAX, '\\0')", 308);
  do_run_test(testUtilsStrtoui_stub_205, "testUtilsStrtoui(\"%lx\", UINT_MAX,  16, true, UINT_MAX, '\\0')", 309);
  do_run_test(testUtilsStrtoui_stub_206, "testUtilsStrtoui(\"%lu\", (unsigned long)UINT_MAX+1,  10, false, 0, '\\0')", 311);
  do_run_test(testUtilsStrtoui_stub_207, "testUtilsStrtoui(\"%lx\", (unsigned long)UINT_MAX+1,  16, false, 0, '\\0')", 312);
  do_run_test(testUtilsStrtoui_stub_208, "testUtilsStrtoui(\"9a\", 0,  10, true, 9, 'a')", 314);
  do_run_test(testUtilsStrtoui_stub_209, "testUtilsStrtoui(\"a\", 0,  10, false, 0, 'a')", 315);
  registerFixture(NULL, NULL, NULL);

  return UnityEnd();
}

/*

*/
